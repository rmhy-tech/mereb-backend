services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: merebdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 5
      timeout: 5s
      start_period: 20s

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "8082:8082"
    environment:
      # SPRING_CONFIG_IMPORT: optional:configserver:http://config-server:8888
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/merebdb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      # EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-service:8761/eureka
      # SPRING_PROFILES_ACTIVE: default
      CORS_ALLOWED_ORIGINS: http://13.83.41.233:5173, http://localhost:8084,http://localhost:5173,http://192.168.1.109:8085
    depends_on:
      # config-server:
      #   condition: service_healthy
      postgres:
        condition: service_healthy
      # discovery-service:
      #   condition: service_healthy
    networks:
      - app-network

  post-service:
    build:
      context: ./post-service
      dockerfile: Dockerfile
    container_name: post-service
    ports:
      - "8083:8083"
    environment:
      # SPRING_CONFIG_IMPORT: optional:configserver:http://config-server:8888
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/merebdb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      # EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-service:8761/eureka
      # SPRING_PROFILES_ACTIVE: default
      USER_SERVICE_URL: http://13.83.41.233:8082
      CORS_ALLOWED_ORIGINS: http://13.83.41.233:5173
    depends_on:
      # config-server:
      #   condition: service_healthy
      postgres:
        condition: service_healthy
      # discovery-service:
      #   condition: service_healthy
    networks:
      - app-network

  mereb-web:
    build:
      context: ./mereb-web
      dockerfile: Dockerfile
    container_name: mereb-web
    ports:
      - "5173:80"
    environment:
      NODE_ENV: production
      MEREB_USER_SERVICE_URL: http://13.83.41.233:8082
      MEREB_POST_SERVICE_URL: http://13.83.41.233:8083
    depends_on:
      user-service:
        condition: service_started
      post-service:
        condition: service_started
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
