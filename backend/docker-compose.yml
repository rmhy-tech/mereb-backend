services:
  kafka:
    image: apache/kafka:3.8.0
    container_name: kafka
    ports:
      - "9092:9092"                                # Port for the broker listener
      - "9093:9093"                                # Port for the controller listener
    environment:
      KAFKA_NODE_ID: 1                              # Unique node id for KRaft mode
      KAFKA_PROCESS_ROLES: broker,controller         # Define this node as both a broker and controller
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093 # Define quorum voters for controller role, node 1 is running on localhost:9093
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093 # Define both broker and controller listeners
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092 # Only advertise the broker listener, not the controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER    # Controller listener name
      KAFKA_LOG_DIRS: /var/lib/kafka/data            # Log directories for broker
      KAFKA_METADATA_LOG_DIRS: /var/lib/kafka/data   # Metadata directories for KRaft mode
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1      # Set replication factor for internal topics (for single broker)
    volumes:
      - ./data/kafka:/var/lib/kafka/data             # Kafka data volume to persist logs
    networks:
      - kafka-network

  user-service:
    image: user-service:latest
    container_name: user-service
    build:
      context: ./user-service                     # Points to the user-service Dockerfile location
      dockerfile: Dockerfile
    ports:
      - "8080:8080"                               # Expose port 8080 for the user-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/merebdb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092     # External Kafka server
    depends_on:
      - postgres
      - kafka
    networks:
      - kafka-network

  post-service:
    image: post-service:latest
    container_name: post-service
    build:
      context: ./post-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/merebdb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SERVER_PORT: 8082
      USER_SERVICE_URL: user-service:8080
    depends_on:
      - postgres
      - kafka
    networks:
      - kafka-network

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: merebdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"                              # Expose port 5432 for PostgreSQL
    volumes:
      - postgres_data:/var/lib/postgresql/data   # Persistent PostgreSQL data
    networks:
      - kafka-network

volumes:
  postgres_data: {}

networks:
  kafka-network:
    driver: bridge
