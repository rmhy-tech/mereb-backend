name: CI Workflow

# Run this workflow on push and pull request events
on:
  push:
    branches:
      - main
    paths:
      - 'user-service/**'     # Trigger this workflow only if changes happen in service-a
  pull_request:
    branches:
      - main
    paths:
      - 'user-service/**'     # Trigger this workflow only if changes happen in service-

jobs:
  user-service:
    name: Build and Test User Service (Java/Maven)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'   # Or another distribution like 'zulu', 'temurin'
          java-version: '17'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('user-service/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Step 1: Build the project using mvn package (no tests run here)
      - name: Build User Service
        run: |
          cd user-service
          mvn clean package -DskipTests=true  # Skipping tests during packaging

      # Step 2: Run the tests separately after packaging
      - name: Run Tests for User Service
        run: |
          cd user-service
          mvn test  # Running tests separately after packaging

      # Step 3: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # Step 4: Build the Docker image for user-service
      - name: Build Docker image
        run: |
          cd user-service
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/user-service:latest .

      # Step 5: Push the Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/user-service:latest